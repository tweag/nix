from typing import Any, TypeAlias, Callable

class CData:
    def __len__(self) -> int: pass

class ffi:
    CData: TypeAlias = CData
    NULL: CData = ...
    @classmethod
    def string(cls, x: CData) -> bytes:
        ...
    @classmethod
    def new(cls, x: str, y: bytes | list[CData] | None = None) -> CData: ...
    @classmethod
    def gc(cls, x: CData, freer: Any) -> CData: ...
    @classmethod
    def callback(cls, x: str) -> Callable[..., CData]: ...

class Lib:
    def __getattribute__(self, name: str) -> Any: ...

lib: Lib = ...
